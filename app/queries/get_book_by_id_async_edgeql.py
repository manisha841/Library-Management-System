# AUTOGENERATED FROM 'app/queries/get_book_by_id.edgeql' WITH:
#     $ edgedb-py -d library


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetBookByIdResult(NoPydanticValidation):
    id: uuid.UUID
    author: str | None
    title: str
    category: GetBookByIdResultCategory


@dataclasses.dataclass
class GetBookByIdResultCategory(NoPydanticValidation):
    id: uuid.UUID
    name: str


async def get_book_by_id(
    executor: edgedb.AsyncIOExecutor,
    *,
    book_id: uuid.UUID,
) -> GetBookByIdResult | None:
    return await executor.query_single(
        """\
        select Book{
          author,
          title,
          category:{
            name
          },
        } filter .id = <uuid>$book_id\
        """,
        book_id=book_id,
    )
